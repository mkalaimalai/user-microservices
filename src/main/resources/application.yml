### This is the main way to configure the application (other than annotations).
### This file is in Yaml format but you can also configure spring boot using the traditional
### Java properties file format.

spring.jmx:
   enabled: false

spring.boot:
      admin:
        url: http://localhost:8085


spring.datasource:
    driverClassName: org.h2.Driver
    url: jdbc:h2:mem:userboot;MODE=MySQL;DB_CLOSE_ON_EXIT=FALSE

server:
  port: 8080

spring.jackson:
    property-naming-strategy: SNAKE_CASE

#todo: make sure to always enable security in production
security:
  basic:
    enabled: false

#management endpoints on a separate port
management:
  port: 8091
  security:
    enabled: false # management port is internal only. no need to secure it.

#default project info followed by actual injected pom-specified values.
project:
  name: spring-boot-user-microservices-jpa
  version: 0.1
  description: spring-boot-user-microservices-jpa

info:
  build:
    artifact: @project.artifactId@
    name: @project.name@
    description: @project.description@
    version: @project.version@

hotel.service:
  name: 'default profile:'

spring.cache:
      ehcache:
        config: classpath:ehcache.xml

spring:
  jpa:
    show-sql: true
---
spring:
  profiles: test
  h2:
    console:
      enabled: true

spring.jpa:
    hibernate.ddl-auto: create-drop

user.service:
  name: 'test profile:'

logging:
  file: user_microservices.log
  org.hibernate: INFO
